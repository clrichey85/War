package war;
import java.util.ArrayList;
import java.util.Random;
import java.util.Scanner;

/**
This is the card game war played with a single deck and split between two players.
The cards are played against each other and the higher card wins and the player takes both.
The game is over when one player wins all cards, or the other player cannot fulfill the war requirements.
 */
public class War {
	
	public static void main(String[] args){
		
	boolean running = true;
	boolean game= true;
	@SuppressWarnings("resource")
	Scanner scan = new Scanner(System.in);
	String playerCard=null;
	String houseCard=null;
	String[] cards= {"AS", "AC", "AD", "AH", "KS", "KC", "KD", "KH", "QS", "QC", "QD", "QH", "JS", "JC", "JD", "JH",
					"XS", "XC", "XD", "XH", "9S", "9C", "9D", "9H", "8S", "8C", "8D", "8H", "7S", "7C", "7D", "7H",
					"6S", "6C", "6D", "6H", "5S", "5C", "5D", "5H", "4S", "4C", "4D", "4H", "3S", "3C", "3D", "3H",
					"2S", "2C", "2D", "2H"};
	int playerCardRank;
	int houseCardRank;
		
		while (running){//loop for entire game includes declarations needed to start a new game
			boolean playerWon=false;
			boolean houseWon= false;
			ArrayList<String> fullDeck= null;
			ArrayList<String> playerDeck = new ArrayList<String>();
			ArrayList<String> houseDeck = new ArrayList<String>();
			ArrayList<String> pot = new ArrayList<String>();
			System.out.println("Welcome to WAR!");
			System.out.println();
			fullDeck=War.createDeck(cards);
			fullDeck=War.shuffle(fullDeck);
			War.splitDeck(fullDeck, playerDeck, houseDeck);
			
			while(game){//Main game loop
				System.out.println("You have "+ playerDeck.size()+ " cards. They have "+ houseDeck.size()+ " cards.");
				int warCount=1;	
				playerCard=playerDeck.get(0);
				houseCard=houseDeck.get(0);
				playerCardRank = War.ranking(playerCard);
				houseCardRank = War.ranking(houseCard);
				System.out.println();
				System.out.println("Are you ready? (space to continue or (q) to quit)");
				if(scan.nextLine().equals("q")){
					game=false;
					break;
				}//end if
				System.out.println("Your card is: " +playerCard);
				System.out.println("Their card is: " +houseCard);
				System.out.println();
				game=War.outcome(playerCardRank, houseCardRank, playerDeck, houseDeck, pot, warCount, game);
				if(game==false){
					if(playerDeck.size()<2){
						houseWon=true;
					}//end if
					else if(houseDeck.size()<2){
						playerWon=true;
					}//end else if
				}//end if
				else if((playerDeck.size()<=0)){
					game= false;
				}//end else if
				else if((houseDeck.size()<=0)){
					game= false;
				}//end else if
			}//end game
			System.out.println();
			if(playerWon==true){
				System.out.println("You win the game!!!");
			}//end if
			else if(houseWon==true){
				System.out.println("They win the game");
			}//end else if
			System.out.println("Would you like to start a new war? (space to continue or (q) to quit)");
			if(scan.nextLine().equals("q")){
				System.out.println();
				System.out.println("Thank you for playing. Come back when you are ready for WAR!");
				running= false;
			}//end if
			game=true;
		}//end running
	}//end Main
	
	public static ArrayList<String> shuffle(ArrayList<String> deck){//shuffles the deck
		ArrayList<String> x = new ArrayList<String>();
		for (int i=0; i<52; i++){
			Random rand= new Random();
			int  y = rand.nextInt(deck.size());
			x.add(deck.get(y));
			deck.remove(y);
		}//end for loop
		return x;
	}//end shuffle
	
	public static ArrayList<String> createDeck(String[] deck){//creates the initial deck
		ArrayList<String> newDeck = new ArrayList<String>();
		for (int i=0; i<deck.length; i++){	
			newDeck.add(deck[i]);
		}//end for loop
		return newDeck;
	}//end createDeck
	
	public static void splitDeck(ArrayList<String> full, ArrayList<String> player, ArrayList<String> house){//deals the cards to each player
		for (int i=1; i<53; i++){	
			if(i % 2 ==0){
				house.add(full.get(i-1));
			}//end if
			else{
				player.add(full.get(i-1));
			}//end else
		}//end for loop
	}//end splitDeck
	
	public static int ranking(String card){//determines the card ranking
		int rank=0;
		if(card.charAt(0)=='A'){
			rank=14;
		}//end else if
		else if (card.charAt(0)=='K'){
			rank=13;
		}//end else if
		else if (card.charAt(0)=='Q'){
			rank=12;
		}//end else if
		else if (card.charAt(0)=='J'){
			rank=11;
		}//end else if
		else if (card.charAt(0)=='X'){
			rank=10;
		}//end else if
		else{
			rank=Character.getNumericValue(card.charAt(0));
		}//end else
		return rank;
	}//end ranking
	
	public static boolean outcome(int player, int house, ArrayList<String> playerDeck, ArrayList<String> houseDeck, ArrayList<String> pot,  int warCount, boolean game){//determines the outcome of the battle
		if(warCount<2){
			pot.add(playerDeck.get(0));
			pot.add(houseDeck.get(0));
			playerDeck.remove(0);
			houseDeck.remove(0);
		}//end if
		if(player > house){
			War.playerWins(playerDeck, houseDeck, pot, warCount);
		}//end if
		else if(player < house){
			War.houseWins(playerDeck, houseDeck, pot, warCount);
		}//end else if
		else{
			if((playerDeck.size()<2)||(houseDeck.size()<2)){
				game=false;
			}//end if
			else{
				pot.add(playerDeck.get(0));
				pot.add(houseDeck.get(0));
				playerDeck.remove(0);
				houseDeck.remove(0);
				pot.add(playerDeck.get(0));
				pot.add(houseDeck.get(0));
				playerDeck.remove(0);
				houseDeck.remove(0);
				War.war(playerDeck, houseDeck, pot, warCount, game);
			}//end else
		}//end else
		return game;
	}//end outcome
	
	public static void playerWins(ArrayList <String> playerDeck, ArrayList <String> houseDeck, ArrayList<String> pot, int warCount){//addresses decks when the player wins
		if(warCount>1){
			System.out.println("You won the war! and recieved: " + pot);
		}//end if
		else{
			System.out.println("You win this round!");
		}//end else
		System.out.println();
		playerDeck.addAll(pot);
		pot.clear();
	}//end playerWins
	
	public static void houseWins(ArrayList <String> playerDeck, ArrayList <String> houseDeck, ArrayList <String> pot, int warCount){//addresses decks when the house wins
		if(warCount>1){
			System.out.println("They won the war");
		}//end if
		else{
			System.out.println("They win this round");
		}//end else
		System.out.println();
		houseDeck.addAll(pot);
		pot.clear();
	}//end houseWins
	
	public static void war(ArrayList<String> playerDeck, ArrayList<String> houseDeck, ArrayList<String> pot, int warCount, boolean game){//addresses decks when there is a war
		@SuppressWarnings("resource")
		Scanner scan = new Scanner(System.in);
		System.out.println("WAR! now for the showdown...");
		System.out.println("You each place a facedown card");
		System.out.println();
		
		String playerWarCard=pot.get(pot.size()-2);
		String houseWarCard=pot.get(pot.size()-1);
		int playerWarRank= War.ranking(playerWarCard);
		int houseWarRank = War.ranking(houseWarCard);
		
		System.out.println("You now play a face up card: " + playerWarCard);
		System.out.println("Press space to see the outcome...");
		scan.nextLine();
		System.out.println("They play a face up card: " + houseWarCard);
		warCount++;
		War.outcome(playerWarRank, houseWarRank, playerDeck, houseDeck, pot, warCount, game);
	}//end war

}//end War

